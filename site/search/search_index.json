{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o do Projeto de Nuvem","text":""},{"location":"#criado-por-ilana-chaia-finger","title":"Criado por Ilana Chaia Finger","text":""},{"location":"#link-para-o-dockerhub-httpshubdockercomrilacfapp-nuvem","title":"Link para o DockerHub: https://hub.docker.com/r/ilacf/app-nuvem","text":"<p>Este documento fornece uma vis\u00e3o geral do projeto, incluindo a configura\u00e7\u00e3o, endpoints da API e todos os requisitos para rodar a aplica\u00e7\u00e3o.</p>"},{"location":"#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este projeto \u00e9 uma aplica\u00e7\u00e3o web constru\u00edda com FastAPI, SQLAlchemy, JWT para autentica\u00e7\u00e3o e usa uma base de dados MySQL para armazenar os dados de usu\u00e1rios e as senhas criptografadas com hash. Ele permite o registro e login de usu\u00e1rios de maneira segura e consulta (apenas para usu\u00e1rios autenticados) \u00e0s 10 m\u00fasicas mais populares do Deezer na data da requisi\u00e7\u00e3o.</p>"},{"location":"#configuracao","title":"Configura\u00e7\u00e3o","text":"<p>Para configurar o projeto, siga os passos abaixo:</p> <ol> <li> <p>Instale a imagem do docker com o seguinte comando:  <pre><code>docker pull ilacf/app-nuvem:latest\n</code></pre></p> </li> <li> <p>Se quiser customizar suas vari\u00e1veis de ambiente, crie um arquivo <code>.env</code> de acordo com o formato no arquivo <code>.env.example</code>. </p> </li> </ol> <p>Aviso</p> <p>Sempre tome cuidado com os arquivos <code>.env</code> e garanta que ele est\u00e1 no arquivo <code>.gitignore</code> antes de publicar seu projeto para n\u00e3o vazar suas credenciais ou dados sens\u00edveis!</p> <ol> <li> <p>Acesse o github e copie o arquivo <code>compose.yaml</code> para sua m\u00e1quina a partir desse link.</p> </li> <li> <p>No mesmo diret\u00f3rio que criou o <code>compose.yaml</code>, rode o comando no terminal: <pre><code>docker compose up -d\n</code></pre></p> </li> <li> <p>Agora basta testar os endpoints pelo aplicativo <code>Postman</code> ou pelo <code>terminal</code>, como mostrado em Usando a API.</p> </li> </ol>"},{"location":"#endpoints-da-api","title":"Endpoints da API","text":"<p>A API possui os seguintes endpoints:</p> <ul> <li>POST /registrar: Registra um novo usu\u00e1rio.</li> <li>POST /login: Autentica um usu\u00e1rio e retorna um token JWT.</li> <li>GET /consultar: Consulta dados protegidos (requer autentica\u00e7\u00e3o).</li> </ul> <p>Para mais detalhes, consulte a documenta\u00e7\u00e3o dos endpoints.</p>"},{"location":"#usando-a-api","title":"Usando a API","text":""},{"location":"#registro-de-usuario","title":"Registro de usu\u00e1rio:","text":"<p>Linux</p> <pre><code>curl -X POST http://localhost:8000/registrar -d '{\"nome\": \"seu_nome\", \"email\": \"seu_email@mail.com\", \"senha\": \"sua_senha\"}'\n</code></pre> <p>Windows</p> <pre><code>Invoke-RestMethod -Uri \"http://localhost:8000/registrar\" -Method POST -Headers @{ \"Content-Type\" = \"application/json\" } -Body '{ \"nome\": \"seu_nome\", \"email\": \"seu_email@mail.com\", \"senha\": \"sua_senha\" }'\n</code></pre>"},{"location":"#login-de-usuario","title":"Login de usu\u00e1rio:","text":"<p>Linux</p> <pre><code>curl -X POST http://localhost:8000/login -d '{\"email\": \"seu_email@mail.com\", \"senha\": \"sua_senha\"}'\n</code></pre> <p>Windows</p> <pre><code>Invoke-RestMethod -Uri \"http://localhost:8000/login\" -Method POST -Headers @{ \"Content-Type\" = \"application/json\" } -Body '{ \"email\": \"seu_email@mail.com\", \"senha\": \"sua_senha\" }'\n</code></pre>"},{"location":"#consulta-das-10-musicas-mais-populares-no-deezer-atualmente","title":"Consulta das 10 m\u00fasicas mais populares no Deezer atualmente:","text":"<p>Linux</p> <pre><code>curl -X GET http://localhost:8000/consultar -H 'Authorization: Bearer {token_jwt_aqui}'\n</code></pre> <p>Windows</p> <pre><code>Invoke-RestMethod -Uri \"http://localhost:8000/consultar\" -Method GET -Headers @{ \"Authorization\" = \"Bearer {token_jwt_aqui}\" }\n</code></pre>"},{"location":"#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<p>A autentica\u00e7\u00e3o \u00e9 feita utilizando JWT. O JWT (JSON Web Token) \u00e9 um padr\u00e3o compacto e seguro para transmitir informa\u00e7\u00f5es entre duas partes em formato JSON, comumente usado para autentica\u00e7\u00e3o. Ele possui tr\u00eas partes: o cabe\u00e7alho (definindo o tipo do token e algoritmo), o payload (contendo as informa\u00e7\u00f5es do usu\u00e1rio e dados adicionais) e a assinatura, que garante a integridade do token. Na autentica\u00e7\u00e3o com JWT, o servidor gera o token ap\u00f3s validar as credenciais do usu\u00e1rio, e o cliente o envia nas requisi\u00e7\u00f5es seguintes para acesso a recursos protegidos.</p> <p>O uso de JWT oferece v\u00e1rias vantagens, como a possibilidade de uma autentica\u00e7\u00e3o sem estado (stateless), facilitando a escalabilidade, al\u00e9m de ser seguro e flex\u00edvel, permitindo adicionar informa\u00e7\u00f5es de usu\u00e1rio e expira\u00e7\u00e3o diretamente no token. Isso o torna ideal para aplica\u00e7\u00f5es distribu\u00eddas e APIs, onde a autentica\u00e7\u00e3o precisa ser leve e independente de sess\u00f5es no servidor.</p>"},{"location":"#banco-de-dados","title":"Banco de Dados","text":"<p>O projeto utiliza um banco de dados MySQL gerado automaticamente pelo docker durante a inicializa\u00e7\u00e3o.</p>"},{"location":"endpoints/","title":"Endpoints da API","text":""},{"location":"endpoints/#post-registrar","title":"POST /registrar","text":"<p>Registra um novo usu\u00e1rio.</p>"},{"location":"endpoints/#request","title":"Request","text":"<pre><code>{\n    \"nome\": \"string\",\n    \"email\": \"string\",\n    \"senha\": \"string\"\n}\n</code></pre>"},{"location":"endpoints/#reponse","title":"Reponse","text":"<pre><code>{\n    \"jwt\": \"string\"\n}\n</code></pre>"},{"location":"endpoints/#post-login","title":"POST /login","text":"<p>Autentica um usu\u00e1rio e retorna um token JWT.</p>"},{"location":"endpoints/#request_1","title":"Request","text":"<pre><code>{\n    \"email\": \"string\",\n    \"senha\": \"string\"\n}\n</code></pre>"},{"location":"endpoints/#response","title":"Response","text":"<pre><code>{\n    \"jwt\": \"string\"\n}\n</code></pre>"},{"location":"endpoints/#get-consultar","title":"GET /consultar","text":"<p>Consulta dados protegidos (requer autentica\u00e7\u00e3o).</p>"},{"location":"endpoints/#request_2","title":"Request","text":"<p>Authorization: Bearer"},{"location":"endpoints/#response_1","title":"Response","text":"<pre><code>{\n    \"top_songs\": [\n        {\n            \"rank\": 1,\n            \"title\": \"string\",\n            \"artist\": \"string\",\n            \"album\": \"string\",\n            \"preview_url\": \"string\"\n        },\n        ...\n    ]\n}\n</code></pre>"},{"location":"testando_api/","title":"Testando a API","text":"<p>Para demonstrar o funcionamento de cada endpoint, aqui est\u00e3o alguns exemplos usando os comandos fornecidos em Usando a API.</p>"},{"location":"testando_api/#post-registrar","title":"POST /registrar:","text":""},{"location":"testando_api/#post-login","title":"POST /login:","text":""},{"location":"testando_api/#get-consultar","title":"GET /consultar:","text":""},{"location":"testando_api/#video-da-execucao","title":"Video da execu\u00e7\u00e3o:","text":"<p>https://drive.google.com/file/d/11KQkN-TeJSlnvjZ5QXC9eBWPTq7pGhsm/preview</p>"}]}